# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class ExpertiseLevels(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, expertise_levels=None, n_expertise_levels=None):  # noqa: E501
        """ExpertiseLevels - a model defined in OpenAPI

        :param expertise_levels: The expertise_levels of this ExpertiseLevels.  # noqa: E501
        :type expertise_levels: List[ExpertiseLevel]
        :param n_expertise_levels: The n_expertise_levels of this ExpertiseLevels.  # noqa: E501
        :type n_expertise_levels: int
        """
        self.openapi_types = {
            'expertise_levels': List[ExpertiseLevel],
            'n_expertise_levels': int
        }

        self.attribute_map = {
            'expertise_levels': 'expertise_levels',
            'n_expertise_levels': 'n_expertise_levels'
        }

        self._expertise_levels = expertise_levels
        self._n_expertise_levels = n_expertise_levels

    @classmethod
    def from_dict(cls, dikt) -> 'ExpertiseLevels':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ExpertiseLevels of this ExpertiseLevels.  # noqa: E501
        :rtype: ExpertiseLevels
        """
        return util.deserialize_model(dikt, cls)

    @property
    def expertise_levels(self):
        """Gets the expertise_levels of this ExpertiseLevels.


        :return: The expertise_levels of this ExpertiseLevels.
        :rtype: List[ExpertiseLevel]
        """
        return self._expertise_levels

    @expertise_levels.setter
    def expertise_levels(self, expertise_levels):
        """Sets the expertise_levels of this ExpertiseLevels.


        :param expertise_levels: The expertise_levels of this ExpertiseLevels.
        :type expertise_levels: List[ExpertiseLevel]
        """

        self._expertise_levels = expertise_levels

    @property
    def n_expertise_levels(self):
        """Gets the n_expertise_levels of this ExpertiseLevels.


        :return: The n_expertise_levels of this ExpertiseLevels.
        :rtype: int
        """
        return self._n_expertise_levels

    @n_expertise_levels.setter
    def n_expertise_levels(self, n_expertise_levels):
        """Sets the n_expertise_levels of this ExpertiseLevels.


        :param n_expertise_levels: The n_expertise_levels of this ExpertiseLevels.
        :type n_expertise_levels: int
        """

        self._n_expertise_levels = n_expertise_levels
