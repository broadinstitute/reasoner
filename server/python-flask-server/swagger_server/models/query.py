# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Query(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, query_type: str=None, terms: Dict[str, str]=None):  # noqa: E501
        """Query - a model defined in Swagger

        :param query_type: The query_type of this Query.  # noqa: E501
        :type query_type: str
        :param terms: The terms of this Query.  # noqa: E501
        :type terms: Dict[str, str]
        """
        self.swagger_types = {
            'query_type': str,
            'terms': Dict[str, str]
        }

        self.attribute_map = {
            'query_type': 'query_type',
            'terms': 'terms'
        }

        self._query_type = query_type
        self._terms = terms

    @classmethod
    def from_dict(cls, dikt) -> 'Query':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Query of this Query.  # noqa: E501
        :rtype: Query
        """
        return util.deserialize_model(dikt, cls)

    @property
    def query_type(self) -> str:
        """Gets the query_type of this Query.

        The type of query to be answered  # noqa: E501

        :return: The query_type of this Query.
        :rtype: str
        """
        return self._query_type

    @query_type.setter
    def query_type(self, query_type: str):
        """Sets the query_type of this Query.

        The type of query to be answered  # noqa: E501

        :param query_type: The query_type of this Query.
        :type query_type: str
        """

        self._query_type = query_type

    @property
    def terms(self) -> Dict[str, str]:
        """Gets the terms of this Query.


        :return: The terms of this Query.
        :rtype: Dict[str, str]
        """
        return self._terms

    @terms.setter
    def terms(self, terms: Dict[str, str]):
        """Sets the terms of this Query.


        :param terms: The terms of this Query.
        :type terms: Dict[str, str]
        """

        self._terms = terms
