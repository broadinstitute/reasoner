# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.result_graph import ResultGraph  # noqa: F401,E501
from swagger_server import util


class Result(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, text: str=None, confidence: float=None, result_graph: ResultGraph=None):  # noqa: E501
        """Result - a model defined in Swagger

        :param id: The id of this Result.  # noqa: E501
        :type id: str
        :param text: The text of this Result.  # noqa: E501
        :type text: str
        :param confidence: The confidence of this Result.  # noqa: E501
        :type confidence: float
        :param result_graph: The result_graph of this Result.  # noqa: E501
        :type result_graph: ResultGraph
        """
        self.swagger_types = {
            'id': str,
            'text': str,
            'confidence': float,
            'result_graph': ResultGraph
        }

        self.attribute_map = {
            'id': 'id',
            'text': 'text',
            'confidence': 'confidence',
            'result_graph': 'result_graph'
        }

        self._id = id
        self._text = text
        self._confidence = confidence
        self._result_graph = result_graph

    @classmethod
    def from_dict(cls, dikt) -> 'Result':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Result of this Result.  # noqa: E501
        :rtype: Result
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this Result.

        URI for this response  # noqa: E501

        :return: The id of this Result.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this Result.

        URI for this response  # noqa: E501

        :param id: The id of this Result.
        :type id: str
        """

        self._id = id

    @property
    def text(self) -> str:
        """Gets the text of this Result.

        A free text description or comment from the reasoner about this answer  # noqa: E501

        :return: The text of this Result.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text: str):
        """Sets the text of this Result.

        A free text description or comment from the reasoner about this answer  # noqa: E501

        :param text: The text of this Result.
        :type text: str
        """

        self._text = text

    @property
    def confidence(self) -> float:
        """Gets the confidence of this Result.

        Confidence metric for this result, a value 0.0 (no confidence) and 1.0 (highest confidence)  # noqa: E501

        :return: The confidence of this Result.
        :rtype: float
        """
        return self._confidence

    @confidence.setter
    def confidence(self, confidence: float):
        """Sets the confidence of this Result.

        Confidence metric for this result, a value 0.0 (no confidence) and 1.0 (highest confidence)  # noqa: E501

        :param confidence: The confidence of this Result.
        :type confidence: float
        """

        self._confidence = confidence

    @property
    def result_graph(self) -> ResultGraph:
        """Gets the result_graph of this Result.


        :return: The result_graph of this Result.
        :rtype: ResultGraph
        """
        return self._result_graph

    @result_graph.setter
    def result_graph(self, result_graph: ResultGraph):
        """Sets the result_graph of this Result.


        :param result_graph: The result_graph of this Result.
        :type result_graph: ResultGraph
        """

        self._result_graph = result_graph
